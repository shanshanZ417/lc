class Solution {
    public List<Integer> killProcess(List<Integer> pid, List<Integer> ppid, int kill) {
        Map<Integer, List<Integer>> kids = new HashMap<>();
        for (int i = 0; i < ppid.size(); i++) {
            int parent = ppid.get(i);
            if (!kids.containsKey(parent)) {
                kids.put(parent, new ArrayList<>());
            }
            kids.get(parent).add(pid.get(i));
        }
        Deque<Integer> queue = new LinkedList<>();
        queue.offerLast(kill);
        List<Integer> res = new ArrayList<>();
        while (!queue.isEmpty()) {
            int cur = queue.pollFirst();
            res.add(cur);
            if (kids.containsKey(cur)) {
                for (int kid : kids.get(cur)) {
                    queue.offerLast(kid);
                }
            }
        }
        return res;
    }
}
