/*
[2,3][5,4][6,4][6,7]
*/
class Solution {
    public int maxEnvelopes(int[][] envelopes) {
        if (envelopes == null || envelopes.length == 0 || envelopes[0].length == 0) {
            return 0;
        }
        Arrays.sort(envelopes, (e1, e2) -> (e1[0] == e2[0] ? e1[1] - e2[1] : e1[0] - e2[0]));
        int n = envelopes.length;
        int[] doll = new int[n];
        doll[0] = 1;
        int max = 1;
        for (int i = 1; i < n; i++) {
            doll[i] = 1;
            for (int j = 0; j < i; j++) {
                if (envelopes[i][0] > envelopes[j][0] && envelopes[i][1] > envelopes[j][1]) {
                    doll[i] = Math.max(doll[j] + 1, doll[i]);
                }
            }
            max = Math.max(max, doll[i]);
        }
        return max;
    }
}
