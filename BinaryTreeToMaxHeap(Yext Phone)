// "static void main" must be defined in a public class.
class Node{
        int val;
        Node left;
        Node right;
        public Node(int val) {
            this.val = val;
        }
        public int getVal() {
            return val;
        }

        public void setVal(int val) {
            this.val = val;
        }

    }
public class Main {
    public static void main(String[] args) {
        Main test = new Main();
        Node node1 = new Node(1);
        Node node2 = new Node(2);
        Node node3 = new Node(3);
        Node node4 = new Node(4);
        Node node5 = new Node(5);
        Node node6 = new Node(6);
        Node node7 = new Node(7);
        node1.left = node2;
        node1.right = node3;
        node2.left = node4;
        node2.right = node5;
        node3.left = node6;
        node3.right = node7;
        test.reorder2(node1);
        System.out.println(node1.val);
        System.out.println(node2.val);
        System.out.println(node3.val);
        System.out.println(node4.val);
        System.out.println(node5.val);
        System.out.println(node6.val);
        System.out.println(node7.val);
    }
    public void reorder2(Node node) {
        if(node == null) {
            return;
        }
        if((node.left == null || node.left != null && node.left.getVal() < node.getVal())
                && (node.right == null || node.right != null && node.right.getVal() < node.getVal())
                ) {
            return;
        }

        reorder2(node.right);
        reorder2(node.left);

        Node max = node.left;
        if(node.left == null) {
            max = node.right;
        }else if(node.right != null && node.left.val < node.right.val) {
            max = node.right;
        }

        int temp = max.getVal();
        max.setVal(node.getVal());
        node.setVal(temp);
        
        reorder2(node.right);
        reorder2(node.left);

    }
}
