// binary search 这题真的厉害，我用了很蠢的办法。
/*
。由于题目中说明了局部峰值一定存在，那么实际上可以从第二个数字开始往后遍历，
如果第二个数字比第一个数字小，说明此时第一个数字就是一个局部峰值；
否则就往后继续遍历，现在是个递增趋势，如果此时某个数字小于前面那个数字，说明前面数字就是一个局部峰值，返回位置即可。
如果循环结束了，说明原数组是个递增数组，返回最后一个位置即可。

对于二分法来说 ->
由于只是需要找到任意一个峰值，那么我们在确定二分查找折半后中间那个元素后，和紧跟的那个元素比较下大小，如果大于，则说明峰值在前面，如果小于则在后面。

*/
class Solution {
    public int findPeakElement(int[] nums) {
        int s = 0;
        int e = nums.length - 1;
        if (nums.length == 1) {
            return 0;
        }
        while (s < e) {
            int index = s + (e - s) / 2;
            if (nums[index] > nums[index + 1]) {
                e = index;
            } else {
                s = index + 1;
            }
        }
        return s;
    }
}
