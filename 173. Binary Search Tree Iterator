// BST
class BSTIterator {
    Deque<TreeNode> stack;
    public BSTIterator(TreeNode root) {
        stack = new LinkedList<>();
        addNode(root);
    }
    
    /** @return the next smallest number */
    public int next() {
        TreeNode cur = stack.pollLast();
        addNode(cur.right);
        return cur.val;
    }
    
    /** @return whether we have a next smallest number */
    public boolean hasNext() {
        return !stack.isEmpty();
    }
    private void addNode(TreeNode root) {
        while (root != null) {
            stack.offerLast(root);
            root = root.left;
        }
    }
}
