/*
最后一步
从[m - 2][n - 1] or [m - 1][n - 2] move to [m - 1][n - 1]
子问题
到[m - 2][n - 1] or [m - 1][n - 2] how many possible unique paths

transition
f([m - 1][n - 1]) = f([m - 2][n - 1]) + f([m - 1][n - 2])

初始条件和边界问题
f[0][0] = 1;
m == 0 只有一种move 就是从左边move
n == 0 只有一种move 就是从上面move
*/
// dp
class Solution {
    public int uniquePaths(int m, int n) {
        int[][] moves = new int[m][n];
        moves[0][0] = 1;
        for (int i = 0; i < m; i++) {
            for (int j = 0; j < n; j++) {
                if (i == 0 && j == 0) {
                    continue;
                } else if (i == 0) {
                    moves[i][j] = moves[i][j - 1];
                } else if (j == 0) {
                    moves[i][j] = moves[i - 1][j];
                } else {
                    moves[i][j] = moves[i - 1][j] + moves[i][j - 1];
                }
            }
        }
        return moves[m - 1][n - 1];
    }
}
