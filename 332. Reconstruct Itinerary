class Solution {
    public List<String> findItinerary(List<List<String>> tickets) {
        //build map
        Map<String, PriorityQueue<String>> map = new HashMap<>();
        for (List<String> t : tickets) {
            if (!map.containsKey(t.get(0))) {
                map.put(t.get(0), new PriorityQueue<>());
            }
            map.get(t.get(0)).add(t.get(1));
        }
        List<String> cur = new ArrayList<>();
        helper(cur, map, "JFK");
        return cur;
    }
    // [["JFK","KUL"],["JFK","NRT"],["NRT","JFK"]]
    private void helper(List<String> cur, Map<String, PriorityQueue<String>> map, String curStop) {
        PriorityQueue<String> pq = map.get(curStop);
        while (pq != null && !pq.isEmpty()) {
            helper(cur, map, pq.poll());
        }
        cur.add(0, curStop);
    }
}
