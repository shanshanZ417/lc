// sol 2: 高斯求和公式
class Solution {
    public int missingNumber(int[] nums) {
        int len = nums.length;
        int expected = len * (1 + len) / 2;
        int sum = 0;
        for (int i : nums) {
            sum += i;
        }
        return expected - sum;
    }
}

// sol 1: 拨乱反正
class Solution {
    public int missingNumber(int[] nums) {
        for (int i = 0; i < nums.length; i++) {
            while (nums[i] != i && nums[i] <= nums.length - 1) {
                swap(nums[i], i, nums);
            }
        }
        for (int i = 0; i < nums.length; i++) {
            if (nums[i] != i) {
                return i;
            }
        }
        return nums.length;
    }
    private void swap(int s, int e, int[] nums) {
        int tmp = nums[s];
        nums[s] = nums[e];
        nums[e] = tmp;
    }
}
