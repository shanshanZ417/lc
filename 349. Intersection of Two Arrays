// sol 1:  two pointer
class Solution {
    public int[] intersection(int[] nums1, int[] nums2) {
        Arrays.sort(nums1);
        Arrays.sort(nums2);
        Set<Integer> set = new HashSet<>();
        int i = 0;
        int j = 0;
        while (i < nums1.length && j < nums2.length) {
            if (nums1[i] < nums2[j]) {
                i++;
            } else if (nums1[i] > nums2[j]) {
                j++;
            } else {
                set.add(nums1[i]);
                i++;
                j++;
            }
        }
        int[] res = new int[set.size()];
        int index = 0;
        Iterator<Integer> iterator = set.iterator();
        while (iterator.hasNext()) {
            res[index++] = iterator.next();
        }
        return res;
    }
}

// sol3: two pointer 不用set去重
class Solution {
    public int[] intersection(int[] nums1, int[] nums2) {
        Arrays.sort(nums1);
        Arrays.sort(nums2);
        int[] res = new int[nums1.length + nums2.length];
        int index = 0;
        int i = 0;
        int j = 0;
        while (i < nums1.length && j < nums2.length) {
            int s = nums1[i];
            int e = nums2[j];
            if (s == e) {
                res[index++] = s;
                while (i < nums1.length && nums1[i] == s) {
                    i++;
                } 
                while (j < nums2.length && nums2[j] == e) {
                    j++;
                }
            } else if (s < e) {
                while (i < nums1.length && s == nums1[i]) {
                    i++;
                }
            } else {
                while (j < nums2.length && e == nums2[j]) {
                    j++;
                }
            }
        }
        int[] result = new int[index];
        for (int k = 0; k < index; k++) {
            result[k] = res[k];
        }
        return result;
    }
}

// sol2: sets
class Solution {
    public int[] intersection(int[] nums1, int[] nums2) {
        Set<Integer> set1 = Arrays.stream(nums1).boxed().collect(Collectors.toSet());
        Set<Integer> set = new HashSet<>();
       for (int i : nums2) {
           if (set1.contains(i)) {
               set.add(i);
           }
       }
        int[] res = new int[set.size()];
        int index = 0;
        Iterator<Integer> iterator = set.iterator();
        while (iterator.hasNext()) {
            res[index++] = iterator.next();
        }
        return res;
    }
}
