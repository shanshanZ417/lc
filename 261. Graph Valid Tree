// uf
class Solution {
    public boolean validTree(int n, int[][] edges) {
        int[] parents = new int[n];
        for (int i = 0; i < n; i++) {
            parents[i] = i;
        }
        for (int[] e : edges) {
            int p1 = find(e[0], parents);
            int p2 = find(e[1], parents);
            if (p1 == p2) {
                return false;
            }
            parents[p1] = p2;
        }
        return edges.length == n - 1;
    }
    private int find(int node, int[] parents) {
        int x = node;
        while (x != parents[x]) {
            x = parents[x];
        }
        while (node != x) {
            int parent = parents[node];
            parents[node] = x;
            node = parent;
        }
        return node;
    }
}
