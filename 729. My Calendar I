// brute force: loop through
class MyCalendar {
    List<int[]> books;
    public MyCalendar() {
        books = new ArrayList<>();
    }
    
    public boolean book(int start, int end) {
        for (int[] book : books) {
            if (Math.max(start, book[0]) < Math.min(end, start[1])) {
                return false;
            }
        }
        books.add(new int[]{start, end});
        return true;
    }
}

// TreeMap
 public class MyCalendar {
    TreeMap<Integer, Integer> books;
    public MyCalendar() {
        books = new TreeMap<>();
    }
    
    public boolean book(int start, int end) {
        Integer cielingStart = books.ceilingKey(start);
        if (cielingStart != null && end > cielingStart) {
            return false;
        }
        Integer flooringStart = books.floorKey(start);
        if (flooringStart != null && start < books.get(flooringStart)) {
            return false;
        }
        books.put(start, end);
        return true;
    }
}
 
