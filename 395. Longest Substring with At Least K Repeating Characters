// two pointers + substring模版变换
class Solution {
    public int longestSubstring(String s, int k) {
        int max = 0;
        for (int i = 1; i <= 26; i++) {
            int res = helper(s, k, i);
            max = Math.max(max, helper(s, k, i));
        }
        return max;
    }
    public int helper(String s, int k, int target) {
        int[] count = new int[26];
        int unique = 0;
        int noLessThanK = 0;
        int start = 0;
        int end = 0;
        int p = 0;
        while (end < s.length()) {
            int z = s.charAt(end) - 'a';
            count[s.charAt(end) - 'a']++;
            if (count[s.charAt(end) - 'a'] == 1) {
                unique++;
            }
            if (count[s.charAt(end++) - 'a'] == k) {
                noLessThanK++;
            }
            while (start < end && unique > target) {
                count[s.charAt(start) - 'a']--;
                if (count[s.charAt(start) - 'a'] == k - 1) {
                    noLessThanK--;
                }
                if (count[s.charAt(start++) - 'a'] == 0) {
                    unique--;
                }
            }
            if (unique == target && unique == noLessThanK) {
                p = Math.max(p, end - start);
            }
        }
        return p;
    }
}
