class Solution {
    public int[][] merge(int[][] intervals) {
        if (intervals == null || intervals.length == 0 || intervals[0].length != 2) {
            return new int[][]{};
        }
        List<int[]> result = new ArrayList<>();
        Arrays.sort(intervals, new Comparator<int[]>((a, b) -> (a[0] - b[0])));
        int start = intervals[0][0];
        int end = intervals[0][1];
        for (int i = 1; i < intervals.length; i++) {
            if (intervals[i][0] > end) {
                int[] interval = new int[]{start, end};
                result.add(interval);
                start = intervals[i][0];
                end = intervals[i][1];
            } else {
                end = Math.max(end, intervals[i][1]);
            }
        }
        int[] interval = new int[]{start, end};
        result.add(interval);
        int[][] finalResult = new int[result.size()][2];
        for (int i = 0; i < result.size(); i++) {
            finalResult[i][0] = result.get(i)[0];
            finalResult[i][1] = result.get(i)[1];
        }
        return finalResult;
    }
}
