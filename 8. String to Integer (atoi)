//更清晰一点的解法
class Solution {
    public int myAtoi(String str) {
        if (str == null || str.length() == 0) {
            return 0;
        }
        int index = 0;
        char[] c = str.toCharArray();
        while (index < str.length() && c[index] == ' ') {
            index++;
        }
        int sign = 1;
        if (index < str.length() && (c[index] == '+' || c[index] == '-')) {
            sign = c[index] == '-' ? -1 : 1;
            index++;
        }
        long num = 0L;
        while (index < str.length()) {
            if (!Character.isDigit(c[index])) {
                break;
            }
            num = num * 10 + (c[index] - '0');
            if (num * sign <= Integer.MIN_VALUE || num * sign >= Integer.MAX_VALUE) {
                return sign == -1 ? Integer.MIN_VALUE : Integer.MAX_VALUE;
            }
            index++;
        }
        return (int)num * sign;
    }
}
// 我的解法
class Solution {
    public int myAtoi(String str) {
        if (str == null || str.length() == 0) {
            return 0;
        }
        char[] c = str.toCharArray();
        boolean start = false;
        for (int i = 0; i < c.length; i++) {
            if (c[i] == '+' || c[i] == '-' || Character.isDigit(c[i])) {
                start = true;
                int sign = 1;
                if (c[i] == '+' || c[i] == '-' ) {
                    sign = c[i] == '-' ? -1 : 1;
                    i++;
                }
                long num = 0L;
                while (i < c.length && Character.isDigit(c[i])) {
                    num = num * 10 + (c[i] - '0');
                    if (num * sign >= Integer.MAX_VALUE || num * sign <= Integer.MIN_VALUE ) {
                        return sign == 1 ? Integer.MAX_VALUE : Integer.MIN_VALUE;
                    }
                    i++;
                }
                return sign * (int)num;
            } else if (c[i] == ' ') {
                if (start) {
                    return 0;
                }
            } else {
                if (!start) {
                    return 0;
                }
            }
        }
        return 0;
    }
}
