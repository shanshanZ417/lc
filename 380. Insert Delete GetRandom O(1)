/* HashMap可以实现O(1) insert & delete, but not random
ArrayList可以实现O(1) insert & get element at any random index, but not delete
但是arraylist delete末尾element是O(1)的，所以先swap要remove的index到结尾，再remove结尾，从此我们想到用map存index&element对应关系
*/
class RandomizedSet {
    List<Integer> list;
    Map<Integer, Integer> map;
    Random rand;
    /** Initialize your data structure here. */
    public RandomizedSet() {
        list = new ArrayList<>();
        map = new HashMap<>();
        rand = new Random();
    }
    
    /** Inserts a value to the set. Returns true if the set did not already contain the specified element. */
    public boolean insert(int val) {
        if (map.containsKey(val)) {
            return false;
        }
        map.put(val, list.size());
        list.add(val);
        return true;
    }
    
    /** Removes a value from the set. Returns true if the set contained the specified element. */
    public boolean remove(int val) {
        if (!map.containsKey(val)) {
            return false;
        }
        int index = map.get(val);
        int element = list.get(list.size() - 1);
        list.set(index, list.get(list.size() - 1));
        map.put(element, index);
        map.remove(val);
        list.remove(list.size() - 1);
        return true;
        
    }
    
    /** Get a random element from the set. */
    public int getRandom() {
        // int random = (int)(Math.random() * list.size());
        int random = rand.nextInt(list.size());
        return list.get(random);
    }
}
