/*
最后一步
从某一个石头跳到n - 1
子问题
能不能跳到某一个石头

transition
f[j] = (0<=i<j) f[i] && (a[i] >= j - i)

初始条件&边界
f[0] = true

计算顺序，从0开始
return f[n - 1]
*/
class Solution {
    public boolean canJump(int[] nums) {
        boolean[] canJump = new boolean[nums.length];
        canJump[0] = true; 
        for (int i = 1; i < nums.length; i++) {
            for (int j = 0; j < i; j++) {
                if (canJump[j] && (nums[j] >= i - j)) {
                    canJump[i] = true;
                    break;
                }
            }
        }
        return canJump[nums.length - 1];
    }
}
