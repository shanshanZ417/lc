// heap
class MedianFinder {
    PriorityQueue<Integer> minheap;
    PriorityQueue<Integer> maxheap;
    /** initialize your data structure here. */
    public MedianFinder() {
        minheap = new PriorityQueue<>();
        maxheap = new PriorityQueue<>(Collections.reverseOrder());
    }
    
    public void addNum(int num) {
        maxheap.offer(num);
        minheap.offer(maxheap.poll());
        if (minheap.size() > maxheap.size()) {
            maxheap.offer(minheap.poll());
        }
    }
    
    public double findMedian() {
        int maxS = maxheap.size();
        int minS = minheap.size();
        if (maxS > minS) {
            return (double)maxheap.peek();
        } 
        return (maxheap.peek() + minheap.peek()) / 2.0;
    }
}

/**
 * Your MedianFinder object will be instantiated and called as such:
 * MedianFinder obj = new MedianFinder();
 * obj.addNum(num);
 * double param_2 = obj.findMedian();
 */
